// Code generated by protoc-gen-go.
// source: munic/type/entity.proto
// DO NOT EDIT!

/*
Package types is a generated protocol buffer package.

It is generated from these files:
	munic/type/entity.proto
	munic/type/event.proto
	munic/type/track.proto
	munic/type/message.proto
	munic/type/connStateChange.proto
	munic/type/ack.proto

It has these top-level messages:
	Entity
	Asset
	AgentVersion
	BSEntrypoint
	Event
	GroupKey
	Track
	Namespace
	Message
	ConnStateChange
	Ack
*/
package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Entity represents a defined object which deals with events (processor, producer or consumer).
type Entity struct {
	// Represent the entity type.
	// If no one is set, the entity is considered as unknown
	// which can be useful for test while debugging.
	//
	// Types that are valid to be assigned to EntityType:
	//	*Entity_Asset
	//	*Entity_AgentVersion
	//	*Entity_BsEntrypoint
	EntityType isEntity_EntityType `protobuf_oneof:"entityType"`
}

func (m *Entity) Reset()                    { *m = Entity{} }
func (m *Entity) String() string            { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()               {}
func (*Entity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isEntity_EntityType interface {
	isEntity_EntityType()
}

type Entity_Asset struct {
	Asset *Asset `protobuf:"bytes,1,opt,name=asset,oneof"`
}
type Entity_AgentVersion struct {
	AgentVersion *AgentVersion `protobuf:"bytes,2,opt,name=agentVersion,oneof"`
}
type Entity_BsEntrypoint struct {
	BsEntrypoint *BSEntrypoint `protobuf:"bytes,3,opt,name=bsEntrypoint,oneof"`
}

func (*Entity_Asset) isEntity_EntityType()        {}
func (*Entity_AgentVersion) isEntity_EntityType() {}
func (*Entity_BsEntrypoint) isEntity_EntityType() {}

func (m *Entity) GetEntityType() isEntity_EntityType {
	if m != nil {
		return m.EntityType
	}
	return nil
}

func (m *Entity) GetAsset() *Asset {
	if x, ok := m.GetEntityType().(*Entity_Asset); ok {
		return x.Asset
	}
	return nil
}

func (m *Entity) GetAgentVersion() *AgentVersion {
	if x, ok := m.GetEntityType().(*Entity_AgentVersion); ok {
		return x.AgentVersion
	}
	return nil
}

func (m *Entity) GetBsEntrypoint() *BSEntrypoint {
	if x, ok := m.GetEntityType().(*Entity_BsEntrypoint); ok {
		return x.BsEntrypoint
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Entity) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Entity_OneofMarshaler, _Entity_OneofUnmarshaler, _Entity_OneofSizer, []interface{}{
		(*Entity_Asset)(nil),
		(*Entity_AgentVersion)(nil),
		(*Entity_BsEntrypoint)(nil),
	}
}

func _Entity_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Entity)
	// entityType
	switch x := m.EntityType.(type) {
	case *Entity_Asset:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Asset); err != nil {
			return err
		}
	case *Entity_AgentVersion:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AgentVersion); err != nil {
			return err
		}
	case *Entity_BsEntrypoint:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BsEntrypoint); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Entity.EntityType has unexpected type %T", x)
	}
	return nil
}

func _Entity_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Entity)
	switch tag {
	case 1: // entityType.asset
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Asset)
		err := b.DecodeMessage(msg)
		m.EntityType = &Entity_Asset{msg}
		return true, err
	case 2: // entityType.agentVersion
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AgentVersion)
		err := b.DecodeMessage(msg)
		m.EntityType = &Entity_AgentVersion{msg}
		return true, err
	case 3: // entityType.bsEntrypoint
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(BSEntrypoint)
		err := b.DecodeMessage(msg)
		m.EntityType = &Entity_BsEntrypoint{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Entity_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Entity)
	// entityType
	switch x := m.EntityType.(type) {
	case *Entity_Asset:
		s := proto.Size(x.Asset)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Entity_AgentVersion:
		s := proto.Size(x.AgentVersion)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Entity_BsEntrypoint:
		s := proto.Size(x.BsEntrypoint)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Asset Entity type. The Event is produced by an external device.
// We can use Asset independently from the entity object. This is the case
// of the event object which use Asset object to precise the related asset
// (and its account).
type Asset struct {
	// id is the IMEI of the device.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// account the device belongs to.
	Account string `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
}

func (m *Asset) Reset()                    { *m = Asset{} }
func (m *Asset) String() string            { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()               {}
func (*Asset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Asset) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Asset) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

// AgentVersion Entity type. The Event is normally produced by the API.
// We can use AgentVersion independently from the entity object.
type AgentVersion struct {
	// id is the unique identifier in the db
	// of the agent version
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// version if the version of the agent version
	// ex: 1.0.1-rc
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// agent is the parent agent of the version
	// ex: maps, obdstack
	Agent *AgentVersion_Agent `protobuf:"bytes,3,opt,name=agent" json:"agent,omitempty"`
}

func (m *AgentVersion) Reset()                    { *m = AgentVersion{} }
func (m *AgentVersion) String() string            { return proto.CompactTextString(m) }
func (*AgentVersion) ProtoMessage()               {}
func (*AgentVersion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AgentVersion) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AgentVersion) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *AgentVersion) GetAgent() *AgentVersion_Agent {
	if m != nil {
		return m.Agent
	}
	return nil
}

// Agent message definition
type AgentVersion_Agent struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *AgentVersion_Agent) Reset()                    { *m = AgentVersion_Agent{} }
func (m *AgentVersion_Agent) String() string            { return proto.CompactTextString(m) }
func (*AgentVersion_Agent) ProtoMessage()               {}
func (*AgentVersion_Agent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *AgentVersion_Agent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AgentVersion_Agent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Binary Server entity.
// We can use BSEntrypoint independently from the entity object.
type BSEntrypoint struct {
	// id is the id of the Binary Server (ex: b12_1234)
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *BSEntrypoint) Reset()                    { *m = BSEntrypoint{} }
func (m *BSEntrypoint) String() string            { return proto.CompactTextString(m) }
func (*BSEntrypoint) ProtoMessage()               {}
func (*BSEntrypoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BSEntrypoint) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*Entity)(nil), "munic.type.Entity")
	proto.RegisterType((*Asset)(nil), "munic.type.Asset")
	proto.RegisterType((*AgentVersion)(nil), "munic.type.AgentVersion")
	proto.RegisterType((*AgentVersion_Agent)(nil), "munic.type.AgentVersion.Agent")
	proto.RegisterType((*BSEntrypoint)(nil), "munic.type.BSEntrypoint")
}

func init() { proto.RegisterFile("munic/type/entity.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x4f, 0x4b, 0xc3, 0x30,
	0x1c, 0x5d, 0xa6, 0x9d, 0xec, 0xb7, 0x22, 0x18, 0x04, 0x8b, 0x87, 0x21, 0x3b, 0x29, 0xb2, 0x06,
	0xff, 0x9c, 0x85, 0x15, 0x06, 0x3b, 0x8e, 0x2a, 0x1e, 0xbc, 0xa5, 0x69, 0x98, 0xc1, 0x26, 0x29,
	0xed, 0x6f, 0xe2, 0x3e, 0x8b, 0x17, 0xbf, 0x8a, 0xdf, 0x4c, 0x92, 0x6e, 0xac, 0x73, 0x7a, 0xcb,
	0xe3, 0xbd, 0xc7, 0x7b, 0x8f, 0xfc, 0xe0, 0x4c, 0x2f, 0x8d, 0x12, 0x0c, 0x57, 0xa5, 0x64, 0xd2,
	0xa0, 0xc2, 0x55, 0x5c, 0x56, 0x16, 0x2d, 0x05, 0x4f, 0xc4, 0x8e, 0x18, 0x7d, 0x13, 0xe8, 0x4d,
	0x3d, 0x49, 0xaf, 0x20, 0xe0, 0x75, 0x2d, 0x31, 0x22, 0x17, 0xe4, 0x72, 0x70, 0x7b, 0x12, 0x6f,
	0x65, 0xf1, 0xc4, 0x11, 0xb3, 0x4e, 0xda, 0x28, 0xe8, 0x03, 0x84, 0x7c, 0x21, 0x0d, 0x3e, 0xcb,
	0xaa, 0x56, 0xd6, 0x44, 0x5d, 0xef, 0x88, 0x76, 0x1c, 0x2d, 0x7e, 0xd6, 0x49, 0x77, 0xf4, 0xce,
	0x9f, 0xd5, 0x53, 0x83, 0xd5, 0xaa, 0xb4, 0xca, 0x60, 0x74, 0xb0, 0xef, 0x4f, 0x1e, 0xb7, 0xbc,
	0xf3, 0xb7, 0xf5, 0x49, 0x08, 0xd0, 0x2c, 0x7a, 0x72, 0x1b, 0x6e, 0x20, 0xf0, 0xfd, 0xe8, 0x31,
	0x74, 0x55, 0xee, 0xeb, 0xf7, 0xd3, 0xae, 0xca, 0x69, 0x04, 0x47, 0x5c, 0x08, 0xbb, 0x34, 0xe8,
	0x1b, 0xf6, 0xd3, 0x0d, 0x1c, 0x7d, 0x12, 0x08, 0xdb, 0x0d, 0xff, 0xb2, 0xbe, 0xb7, 0xc6, 0xf5,
	0xd3, 0x0d, 0xa4, 0xf7, 0x10, 0xf8, 0x2d, 0xeb, 0xd2, 0xc3, 0xff, 0x46, 0x37, 0x20, 0x6d, 0xc4,
	0xe7, 0xd7, 0x10, 0x78, 0xbc, 0x17, 0x44, 0xe1, 0xd0, 0x70, 0x2d, 0xd7, 0x29, 0xfe, 0x3d, 0x1a,
	0x42, 0xd8, 0x9e, 0xff, 0xdb, 0x93, 0xbc, 0xc1, 0xa9, 0xb0, 0x7a, 0x1d, 0xac, 0x6d, 0x2e, 0x0b,
	0x1f, 0x9f, 0x0c, 0x9a, 0x9f, 0x9c, 0xbb, 0x5f, 0x9e, 0x93, 0x97, 0xc9, 0x42, 0x61, 0xc1, 0xb3,
	0x58, 0xdb, 0x4c, 0x15, 0x72, 0xac, 0x0c, 0x56, 0x3c, 0x16, 0x56, 0x33, 0x51, 0xd8, 0x65, 0x3e,
	0x36, 0xf2, 0x03, 0x59, 0x2d, 0x5e, 0xa5, 0xe6, 0x4c, 0x58, 0x5d, 0xaa, 0x42, 0xe6, 0x6c, 0x61,
	0xd9, 0xf6, 0x6c, 0xea, 0x2f, 0x42, 0xb2, 0x9e, 0x3f, 0x9a, 0xbb, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x70, 0xfb, 0xef, 0x64, 0x4f, 0x02, 0x00, 0x00,
}
