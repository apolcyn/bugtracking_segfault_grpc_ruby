// Code generated by protoc-gen-go.
// source: munic/type/connStateChange.proto
// DO NOT EDIT!

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ConnStateChange_Type int32

const (
	ConnStateChange_UNKNOWN_TYPE     ConnStateChange_Type = 0
	ConnStateChange_CONNECT          ConnStateChange_Type = 1
	ConnStateChange_DISCONNECT       ConnStateChange_Type = 2
	ConnStateChange_CONNECT_TRY_FAIL ConnStateChange_Type = 3
)

var ConnStateChange_Type_name = map[int32]string{
	0: "UNKNOWN_TYPE",
	1: "CONNECT",
	2: "DISCONNECT",
	3: "CONNECT_TRY_FAIL",
}
var ConnStateChange_Type_value = map[string]int32{
	"UNKNOWN_TYPE":     0,
	"CONNECT":          1,
	"DISCONNECT":       2,
	"CONNECT_TRY_FAIL": 3,
}

func (x ConnStateChange_Type) String() string {
	return proto.EnumName(ConnStateChange_Type_name, int32(x))
}
func (ConnStateChange_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 0} }

// AssetReason is the list of reasons for an asset disconnection as seen by the asset itself.
type ConnStateChange_AssetReason int32

const (
	ConnStateChange_UNKNOWN_ASSET_REASON ConnStateChange_AssetReason = 0
	ConnStateChange_COLD_BOOT            ConnStateChange_AssetReason = 1
	ConnStateChange_SUSPEND_BOOT         ConnStateChange_AssetReason = 2
	ConnStateChange_IDLE_OUT             ConnStateChange_AssetReason = 3
	ConnStateChange_PPP_LOST             ConnStateChange_AssetReason = 4
	ConnStateChange_MODEM_RESET          ConnStateChange_AssetReason = 5
	ConnStateChange_SIM_ERROR            ConnStateChange_AssetReason = 6
	ConnStateChange_ROAMING              ConnStateChange_AssetReason = 7
	ConnStateChange_CONNECTION_LOST      ConnStateChange_AssetReason = 8
	ConnStateChange_NEW_CONFIG           ConnStateChange_AssetReason = 9
	ConnStateChange_WRITE_ERROR          ConnStateChange_AssetReason = 10
	ConnStateChange_READ_ERROR           ConnStateChange_AssetReason = 11
	ConnStateChange_CLOSED_BY_SERVER     ConnStateChange_AssetReason = 12
)

var ConnStateChange_AssetReason_name = map[int32]string{
	0:  "UNKNOWN_ASSET_REASON",
	1:  "COLD_BOOT",
	2:  "SUSPEND_BOOT",
	3:  "IDLE_OUT",
	4:  "PPP_LOST",
	5:  "MODEM_RESET",
	6:  "SIM_ERROR",
	7:  "ROAMING",
	8:  "CONNECTION_LOST",
	9:  "NEW_CONFIG",
	10: "WRITE_ERROR",
	11: "READ_ERROR",
	12: "CLOSED_BY_SERVER",
}
var ConnStateChange_AssetReason_value = map[string]int32{
	"UNKNOWN_ASSET_REASON": 0,
	"COLD_BOOT":            1,
	"SUSPEND_BOOT":         2,
	"IDLE_OUT":             3,
	"PPP_LOST":             4,
	"MODEM_RESET":          5,
	"SIM_ERROR":            6,
	"ROAMING":              7,
	"CONNECTION_LOST":      8,
	"NEW_CONFIG":           9,
	"WRITE_ERROR":          10,
	"READ_ERROR":           11,
	"CLOSED_BY_SERVER":     12,
}

func (x ConnStateChange_AssetReason) String() string {
	return proto.EnumName(ConnStateChange_AssetReason_name, int32(x))
}
func (ConnStateChange_AssetReason) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{0, 1}
}

// BSReason is the list of reasons for an asset disconnection/connection failure as seen by the Binary Server.
type ConnStateChange_BSReason int32

const (
	ConnStateChange_UNKNOWN_BS_REASON        ConnStateChange_BSReason = 0
	ConnStateChange_SOCKET_CLOSED            ConnStateChange_BSReason = 1
	ConnStateChange_NETWORK_ERROR            ConnStateChange_BSReason = 2
	ConnStateChange_CLIENT_DISCONNECT        ConnStateChange_BSReason = 3
	ConnStateChange_NETWORK_ACTIVITY_TIMEOUT ConnStateChange_BSReason = 4
	ConnStateChange_MESSAGE_ACK_TIMEOUT      ConnStateChange_BSReason = 5
	ConnStateChange_BASEVALUE_ACK_TIMEOUT    ConnStateChange_BSReason = 6
	ConnStateChange_UNKNOWN_CHANNEL          ConnStateChange_BSReason = 7
	ConnStateChange_UNKNOWN_DYNAMIC_CHANNEL  ConnStateChange_BSReason = 8
	ConnStateChange_SERVER_SHUTDOWN          ConnStateChange_BSReason = 9
	ConnStateChange_AUTH_FAILED_ASSET        ConnStateChange_BSReason = 10
	ConnStateChange_AUTH_FAILED_ACCOUNT      ConnStateChange_BSReason = 11
	ConnStateChange_AUTH_FAILED_IP           ConnStateChange_BSReason = 12
	ConnStateChange_AUTH_FAILED_TRANSPORT    ConnStateChange_BSReason = 13
)

var ConnStateChange_BSReason_name = map[int32]string{
	0:  "UNKNOWN_BS_REASON",
	1:  "SOCKET_CLOSED",
	2:  "NETWORK_ERROR",
	3:  "CLIENT_DISCONNECT",
	4:  "NETWORK_ACTIVITY_TIMEOUT",
	5:  "MESSAGE_ACK_TIMEOUT",
	6:  "BASEVALUE_ACK_TIMEOUT",
	7:  "UNKNOWN_CHANNEL",
	8:  "UNKNOWN_DYNAMIC_CHANNEL",
	9:  "SERVER_SHUTDOWN",
	10: "AUTH_FAILED_ASSET",
	11: "AUTH_FAILED_ACCOUNT",
	12: "AUTH_FAILED_IP",
	13: "AUTH_FAILED_TRANSPORT",
}
var ConnStateChange_BSReason_value = map[string]int32{
	"UNKNOWN_BS_REASON":        0,
	"SOCKET_CLOSED":            1,
	"NETWORK_ERROR":            2,
	"CLIENT_DISCONNECT":        3,
	"NETWORK_ACTIVITY_TIMEOUT": 4,
	"MESSAGE_ACK_TIMEOUT":      5,
	"BASEVALUE_ACK_TIMEOUT":    6,
	"UNKNOWN_CHANNEL":          7,
	"UNKNOWN_DYNAMIC_CHANNEL":  8,
	"SERVER_SHUTDOWN":          9,
	"AUTH_FAILED_ASSET":        10,
	"AUTH_FAILED_ACCOUNT":      11,
	"AUTH_FAILED_IP":           12,
	"AUTH_FAILED_TRANSPORT":    13,
}

func (x ConnStateChange_BSReason) String() string {
	return proto.EnumName(ConnStateChange_BSReason_name, int32(x))
}
func (ConnStateChange_BSReason) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 2} }

// ConnStateChange is received when a device's connection state change.
// This type replace the "Presence" object
type ConnStateChange struct {
	Type ConnStateChange_Type `protobuf:"varint,1,opt,name=type,enum=munic.type.ConnStateChange_Type" json:"type,omitempty"`
	// AssetReason is the reason of the _last_ disconnection. It is returned
	// by the asset and may not be present in disconnect & conntect_try_fail events.
	AssetReason ConnStateChange_AssetReason `protobuf:"varint,2,opt,name=asset_reason,json=assetReason,enum=munic.type.ConnStateChange_AssetReason" json:"asset_reason,omitempty"`
	// BSReason is the reason of the loss-of-connection/failure-to-connect event.
	// It is returned by the Binary Server and will not be present for CONNECT Changes.
	BsReason ConnStateChange_BSReason `protobuf:"varint,3,opt,name=bs_reason,json=bsReason,enum=munic.type.ConnStateChange_BSReason" json:"bs_reason,omitempty"`
	// The ip address of the asset concerned by this presence.
	Ip string `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	// The protocol used in the connection.
	Protocol string `protobuf:"bytes,5,opt,name=protocol" json:"protocol,omitempty"`
	// The textual description of the presence event occurence.
	Fullreason string `protobuf:"bytes,6,opt,name=fullreason" json:"fullreason,omitempty"`
}

func (m *ConnStateChange) Reset()                    { *m = ConnStateChange{} }
func (m *ConnStateChange) String() string            { return proto.CompactTextString(m) }
func (*ConnStateChange) ProtoMessage()               {}
func (*ConnStateChange) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *ConnStateChange) GetType() ConnStateChange_Type {
	if m != nil {
		return m.Type
	}
	return ConnStateChange_UNKNOWN_TYPE
}

func (m *ConnStateChange) GetAssetReason() ConnStateChange_AssetReason {
	if m != nil {
		return m.AssetReason
	}
	return ConnStateChange_UNKNOWN_ASSET_REASON
}

func (m *ConnStateChange) GetBsReason() ConnStateChange_BSReason {
	if m != nil {
		return m.BsReason
	}
	return ConnStateChange_UNKNOWN_BS_REASON
}

func (m *ConnStateChange) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ConnStateChange) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

func (m *ConnStateChange) GetFullreason() string {
	if m != nil {
		return m.Fullreason
	}
	return ""
}

func init() {
	proto.RegisterType((*ConnStateChange)(nil), "munic.type.ConnStateChange")
	proto.RegisterEnum("munic.type.ConnStateChange_Type", ConnStateChange_Type_name, ConnStateChange_Type_value)
	proto.RegisterEnum("munic.type.ConnStateChange_AssetReason", ConnStateChange_AssetReason_name, ConnStateChange_AssetReason_value)
	proto.RegisterEnum("munic.type.ConnStateChange_BSReason", ConnStateChange_BSReason_name, ConnStateChange_BSReason_value)
}

func init() { proto.RegisterFile("munic/type/connStateChange.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 671 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0x5f, 0x6e, 0xea, 0x38,
	0x14, 0xc6, 0x1b, 0xa0, 0xfc, 0x39, 0x50, 0xea, 0xba, 0x54, 0x65, 0xfe, 0x68, 0x84, 0xd0, 0x48,
	0xd3, 0x97, 0x82, 0x34, 0x33, 0x1b, 0x30, 0x89, 0xdb, 0x66, 0x08, 0x76, 0x64, 0x9b, 0x22, 0xe6,
	0xc5, 0x0a, 0x69, 0xa6, 0x45, 0x0a, 0x04, 0x95, 0x54, 0x9a, 0xee, 0xe6, 0x2e, 0xe3, 0xae, 0xe4,
	0xee, 0xe2, 0xee, 0xe1, 0xca, 0x21, 0x29, 0xb4, 0x0f, 0x7d, 0x3c, 0xdf, 0xf9, 0xfc, 0xe3, 0x7c,
	0x36, 0x27, 0xd0, 0x5b, 0xbd, 0xac, 0x97, 0xe1, 0x30, 0x7d, 0xdd, 0x44, 0xc3, 0x30, 0x59, 0xaf,
	0x65, 0x1a, 0xa4, 0x91, 0xfd, 0x14, 0xac, 0x1f, 0xa3, 0xc1, 0xe6, 0x39, 0x49, 0x13, 0x0c, 0x99,
	0x63, 0x60, 0x1c, 0xfd, 0xaf, 0x35, 0x38, 0xb5, 0xdf, 0xbb, 0xf0, 0xdf, 0x50, 0x31, 0xbd, 0xae,
	0xd5, 0xb3, 0xae, 0xda, 0x7f, 0xf6, 0x06, 0x7b, 0xfb, 0xe0, 0x83, 0x75, 0xa0, 0x5e, 0x37, 0x91,
	0xc8, 0xdc, 0xf8, 0x1f, 0x68, 0x05, 0xdb, 0x6d, 0x94, 0xea, 0xe7, 0x28, 0xd8, 0x26, 0xeb, 0x6e,
	0x29, 0x3b, 0xfd, 0xc7, 0x67, 0xa7, 0x89, 0xf1, 0x8b, 0xcc, 0x2e, 0x9a, 0xc1, 0xbe, 0xc0, 0x04,
	0x1a, 0x8b, 0x6d, 0x01, 0x2a, 0x67, 0xa0, 0xdf, 0x3f, 0x03, 0x8d, 0x64, 0x4e, 0xa9, 0x2f, 0xb6,
	0x39, 0xa2, 0x0d, 0xa5, 0xe5, 0xa6, 0x5b, 0xe9, 0x59, 0x57, 0x0d, 0x51, 0x5a, 0x6e, 0xf0, 0xcf,
	0x50, 0xcf, 0xd2, 0x87, 0x49, 0xdc, 0x3d, 0xce, 0xd4, 0xb7, 0x1a, 0xff, 0x06, 0xf0, 0xdf, 0x4b,
	0x1c, 0xe7, 0xbf, 0x57, 0xcd, 0xba, 0x07, 0x4a, 0x7f, 0x0c, 0x15, 0x13, 0x14, 0x23, 0x68, 0x4d,
	0xd9, 0x98, 0xf1, 0x19, 0xd3, 0x6a, 0xee, 0x53, 0x74, 0x84, 0x9b, 0x50, 0xb3, 0x39, 0x63, 0xd4,
	0x56, 0xc8, 0xc2, 0x6d, 0x00, 0xc7, 0x95, 0x45, 0x5d, 0xc2, 0x1d, 0x40, 0x79, 0xa1, 0x95, 0x98,
	0xeb, 0x1b, 0xe2, 0x7a, 0xa8, 0xdc, 0xff, 0x6e, 0x41, 0xf3, 0x20, 0x38, 0xee, 0x42, 0xa7, 0x80,
	0x12, 0x29, 0xa9, 0xd2, 0x82, 0x12, 0xc9, 0x19, 0x3a, 0xc2, 0x27, 0xd0, 0xb0, 0xb9, 0xe7, 0xe8,
	0x11, 0xe7, 0x06, 0x8f, 0xa0, 0x25, 0xa7, 0xd2, 0xa7, 0x2c, 0x57, 0x4a, 0xb8, 0x05, 0x75, 0xd7,
	0xf1, 0xa8, 0xe6, 0x53, 0x85, 0xca, 0xa6, 0xf2, 0x7d, 0x5f, 0x7b, 0x5c, 0x2a, 0x54, 0xc1, 0xa7,
	0xd0, 0x9c, 0x70, 0x87, 0x4e, 0xb4, 0xa0, 0x92, 0x2a, 0x74, 0x6c, 0x68, 0xd2, 0x9d, 0x68, 0x2a,
	0x04, 0x17, 0xa8, 0x6a, 0x26, 0x17, 0x9c, 0x4c, 0x5c, 0x76, 0x8b, 0x6a, 0xf8, 0x1c, 0x4e, 0xf3,
	0x49, 0x5d, 0xce, 0x76, 0x84, 0xba, 0x89, 0xc3, 0xe8, 0x4c, 0xdb, 0x9c, 0xdd, 0xb8, 0xb7, 0xa8,
	0x61, 0x88, 0x33, 0xe1, 0x2a, 0x9a, 0x23, 0xc0, 0x18, 0x04, 0x25, 0x4e, 0x5e, 0x37, 0xb3, 0xbc,
	0x1e, 0x97, 0xd4, 0xd1, 0xa3, 0xb9, 0x96, 0x54, 0xdc, 0x53, 0x81, 0x5a, 0xfd, 0x6f, 0x25, 0xa8,
	0x17, 0xef, 0x83, 0x2f, 0xe0, 0xac, 0x08, 0x3b, 0x92, 0xfb, 0xa4, 0x67, 0x70, 0x22, 0xb9, 0x3d,
	0xa6, 0x4a, 0xef, 0x00, 0xc8, 0x32, 0x12, 0xa3, 0x6a, 0xc6, 0xc5, 0x38, 0xe7, 0x97, 0xcc, 0x61,
	0xdb, 0x73, 0x29, 0x53, 0xfa, 0xe0, 0x9a, 0xcb, 0xf8, 0x57, 0xe8, 0x16, 0x4e, 0x62, 0x2b, 0xf7,
	0xde, 0x55, 0x73, 0xad, 0xdc, 0x09, 0x35, 0xb7, 0x52, 0xc1, 0x97, 0x70, 0x3e, 0xa1, 0x52, 0x92,
	0x5b, 0xaa, 0x89, 0x3d, 0x7e, 0x6b, 0x1c, 0xe3, 0x9f, 0xe0, 0x62, 0x44, 0x24, 0xbd, 0x27, 0xde,
	0xf4, 0x7d, 0xab, 0x6a, 0xae, 0xa3, 0x98, 0xd2, 0xbe, 0x23, 0x8c, 0x51, 0x0f, 0xd5, 0xf0, 0x2f,
	0x70, 0x59, 0x88, 0xce, 0x9c, 0x91, 0x89, 0x6b, 0xbf, 0x35, 0xeb, 0xe6, 0xc4, 0x2e, 0xb0, 0x96,
	0x77, 0x53, 0xe5, 0xf0, 0x19, 0x43, 0x0d, 0x33, 0x2f, 0x99, 0xaa, 0xbb, 0xec, 0xe1, 0xa9, 0xb3,
	0x7b, 0x5d, 0x04, 0x66, 0xa2, 0x77, 0xb2, 0x6d, 0xf3, 0x29, 0x53, 0xa8, 0x89, 0x31, 0xb4, 0x0f,
	0x1b, 0xae, 0x8f, 0x5a, 0x66, 0xca, 0x43, 0x4d, 0x09, 0xc2, 0xa4, 0xcf, 0x85, 0x42, 0x27, 0xa3,
	0x14, 0x3a, 0x61, 0xb2, 0xca, 0xd7, 0x62, 0x95, 0x3c, 0x44, 0x71, 0xb6, 0x1c, 0xa3, 0xce, 0x87,
	0xed, 0xf0, 0xcd, 0xdf, 0xdc, 0xb7, 0xfe, 0x25, 0x8f, 0xcb, 0x34, 0x0e, 0x16, 0x83, 0x55, 0xb2,
	0x58, 0xc6, 0xd1, 0xf5, 0x72, 0x9d, 0x3e, 0x07, 0x83, 0x30, 0x59, 0x0d, 0xc3, 0x38, 0x79, 0x79,
	0xb8, 0x5e, 0x47, 0xff, 0xa7, 0xc3, 0x6d, 0xf8, 0x14, 0xad, 0x82, 0x61, 0x98, 0xac, 0x36, 0xcb,
	0x38, 0x7a, 0x18, 0x3e, 0x26, 0xc3, 0xfd, 0xe7, 0x64, 0xfb, 0xc5, 0xb2, 0x16, 0xd5, 0x6c, 0x6b,
	0xfe, 0xfa, 0x11, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x19, 0x68, 0xed, 0x67, 0x04, 0x00, 0x00,
}
