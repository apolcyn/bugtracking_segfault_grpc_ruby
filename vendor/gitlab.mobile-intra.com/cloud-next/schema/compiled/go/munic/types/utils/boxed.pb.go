// Code generated by protoc-gen-go.
// source: munic/type/utils/boxed.proto
// DO NOT EDIT!

/*
Package utils is a generated protocol buffer package.

It is generated from these files:
	munic/type/utils/boxed.proto
	munic/type/utils/struct.proto

It has these top-level messages:
	Boolean
	Integer
	Double
	String
	Bytes
	Struct
	Value
	ListValue
*/
package utils

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Boolean struct {
	Value bool `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *Boolean) Reset()                    { *m = Boolean{} }
func (m *Boolean) String() string            { return proto.CompactTextString(m) }
func (*Boolean) ProtoMessage()               {}
func (*Boolean) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Boolean) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type Integer struct {
	Value int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *Integer) Reset()                    { *m = Integer{} }
func (m *Integer) String() string            { return proto.CompactTextString(m) }
func (*Integer) ProtoMessage()               {}
func (*Integer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Integer) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Double struct {
	Value float64 `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
}

func (m *Double) Reset()                    { *m = Double{} }
func (m *Double) String() string            { return proto.CompactTextString(m) }
func (*Double) ProtoMessage()               {}
func (*Double) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Double) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type String struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *String) Reset()                    { *m = String{} }
func (m *String) String() string            { return proto.CompactTextString(m) }
func (*String) ProtoMessage()               {}
func (*String) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *String) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Bytes struct {
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Bytes) Reset()                    { *m = Bytes{} }
func (m *Bytes) String() string            { return proto.CompactTextString(m) }
func (*Bytes) ProtoMessage()               {}
func (*Bytes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Bytes) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Boolean)(nil), "munic.type.utils.Boolean")
	proto.RegisterType((*Integer)(nil), "munic.type.utils.Integer")
	proto.RegisterType((*Double)(nil), "munic.type.utils.Double")
	proto.RegisterType((*String)(nil), "munic.type.utils.String")
	proto.RegisterType((*Bytes)(nil), "munic.type.utils.Bytes")
}

func init() { proto.RegisterFile("munic/type/utils/boxed.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0xd0, 0xbf, 0x4a, 0x04, 0x31,
	0x10, 0x06, 0x70, 0x82, 0xdc, 0xa9, 0xc1, 0x42, 0x0e, 0x0b, 0x11, 0xff, 0x61, 0x65, 0x73, 0x99,
	0xc2, 0x37, 0x08, 0x82, 0xd8, 0x1d, 0xda, 0xd9, 0x25, 0xd9, 0x61, 0x0d, 0x4c, 0x32, 0xcb, 0xee,
	0xe4, 0xb8, 0x7b, 0x1b, 0x1f, 0x55, 0x76, 0xd7, 0xc3, 0x4b, 0x39, 0xfc, 0xbe, 0x62, 0xbe, 0x4f,
	0xdf, 0xa6, 0x92, 0x63, 0x00, 0xd9, 0x77, 0x08, 0x45, 0x22, 0x0d, 0xe0, 0x79, 0x87, 0x8d, 0xe9,
	0x7a, 0x16, 0x5e, 0x5d, 0x4e, 0x6a, 0x46, 0x35, 0x93, 0x3e, 0x3d, 0xe8, 0x53, 0xcb, 0x4c, 0xe8,
	0xf2, 0xea, 0x4a, 0x2f, 0xb6, 0x8e, 0x0a, 0x5e, 0xab, 0x47, 0xf5, 0x7c, 0xf6, 0x31, 0x1f, 0x63,
	0xe0, 0x3d, 0x0b, 0xb6, 0xd8, 0xd7, 0x81, 0x93, 0x43, 0xe0, 0x5e, 0x2f, 0x5f, 0xb9, 0x78, 0xc2,
	0xda, 0xd5, 0x91, 0x7f, 0x4a, 0x1f, 0x73, 0x5b, 0xfb, 0xf9, 0xc1, 0xef, 0xf4, 0xc2, 0xee, 0x05,
	0x87, 0x9a, 0x2f, 0xfe, 0xd8, 0x6e, 0xf5, 0x4d, 0xe0, 0x64, 0xe6, 0xc7, 0x13, 0x37, 0x48, 0x47,
	0xef, 0x5b, 0x6d, 0xc7, 0x76, 0x9b, 0xb1, 0xdc, 0x46, 0x7d, 0xbd, 0xb5, 0x51, 0xc8, 0x79, 0x93,
	0xd8, 0x47, 0xc2, 0x75, 0xcc, 0xd2, 0x3b, 0x13, 0x38, 0x41, 0x20, 0x2e, 0xcd, 0x3a, 0xe3, 0x4e,
	0x60, 0x08, 0xdf, 0x98, 0x1c, 0x04, 0x4e, 0x5d, 0x24, 0x6c, 0xa0, 0x65, 0xf8, 0x9f, 0x6c, 0x98,
	0x37, 0xfb, 0x51, 0xca, 0x2f, 0xa7, 0xc5, 0x5e, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x88,
	0xb3, 0xcc, 0x51, 0x01, 0x00, 0x00,
}
